{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","props","tabs","onTabSelected","selectedTabId","selectedTab","find","tab","id","isSelectedTabExists","map","includes","className","index","cn","href","onClick","title","content","App","useState","setSelectedTabId","data","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAO,SAACC,GACnB,IACEC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,cACAC,EACEH,EADFG,cAGIC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,KAC1CK,EAAsBP,EAAKQ,KAAI,SAAAH,GAAG,OAAIA,EAAIC,MAAIG,SAASP,GAE7D,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKQ,UAAU,gBAAf,SACE,6BACGV,EAAKQ,KAAI,SAACH,EAAKM,GAAN,OACR,oBAEED,UAAWE,IAAG,CACZ,YAAaP,EAAIC,KAAOJ,GACV,IAAVS,IAAgBJ,IAEtB,UAAQ,MANV,SAQE,mBACEM,KAAI,WAAMR,EAAIC,IACd,UAAQ,UACRQ,QAAS,WACHT,EAAIC,KAAOJ,GACbD,EAAcI,IALpB,SASGA,EAAIU,SAhBFV,EAAIC,WAuBjB,qBAAKI,UAAU,QAAQ,UAAQ,aAA/B,gBACGP,QADH,IACGA,OADH,EACGA,EAAaa,cCpCThB,EAAO,CAClB,CAAEM,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAAS,SAAnD,mBAAOhB,EAAP,KAAsBiB,EAAtB,KAEMhB,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,KAMhD,OACE,sBAAKQ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBP,EAAYY,SAGlC,cAAC,EAAD,CACEf,KAAMA,EACNC,cAZgB,SAACmB,GACrBD,EAAiBC,EAAKd,KAYlBJ,cAAeA,QC3BvBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.85cd4e0c.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport const Tabs = (props) => {\n  const {\n    tabs,\n    onTabSelected,\n    selectedTabId,\n  } = props;\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n  const isSelectedTabExists = tabs.map(tab => tab.id).includes(selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab, index) => (\n            <li\n              key={tab.id}\n              className={cn({\n                'is-active': tab.id === selectedTabId\n                || (index === 0 && !isSelectedTabExists),\n              })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== selectedTabId) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  const onTabSelected = (data) => {\n    setSelectedTabId(data.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        onTabSelected={onTabSelected}\n        selectedTabId={selectedTabId}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}